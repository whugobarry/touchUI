<script>
export default {
  config: {
    "pages": [
      "pages/login_register/register",
      "pages/login_register/login",
      "pages/login_register/forget",
      "pages/layout/home",
      "pages/layout/shop",
      "pages/layout/address",
      "pages/message/message",
      "pages/message/info",
      "pages/auth/kyc",
      "pages/contract/info"
    ],
    "theme": {
      "theme-color": "#0e29fb"
    },
    "window": {
      "scrollType": "div",
      "navigationBarBackgroundColor":"#ffffff",
      "navigationBarTextStyle":"black",
      "navigationBarBorderColor":"rgba(231, 231, 231, 0.6)"
    },
    "networkBaseUrl":""
  },
  data () {
    return {
      //全局变量
      globalData: {
      },
      WIN_WIDTH:ui.WIN_WIDTH,
      tabIndex: 0,
      tabBarList: [],
      navStyle: {},
      tabBar: {},
      tabBarHeight: 56,
      isApp: ui.IS_APP,
      headerHeight: ui.DEFAULT_HEADER_HEIGHT,
      paths: [],
      barHeight: ui.STATUS_BAR_HEIGHT,
      showSlideMenu:false,
      active:2,
      footer:true
    }
  },
  computed: {
    // 控制通用导航栏是否显示
    navigationBarVisible () {
      return this.winConfig.navigationStyle !== 'custom'
    },
    // 控制通用导航栏是否显示返回按钮（首页不显示，其他页显示）
    showBack () {
      let homePath = this.paths[0]
      if (this.tabBar && this.tabBar.paths) {
        return this.tabBar.paths.indexOf(homePath) < 0
      } else {
        return homePath !== this.$route.path
      }
    },
    // 通用导航栏应用app.json和page.json的设置
    winConfig () {
      let window = this.$router.options.window
      let config = { ...window, ...this.pageConfig }
      let color = config.navigationBarTextStyle || 'white'

      let scrollType = document.body.getAttribute('scroll-type')

      this.navStyle = {
        backgroundColor: config.navigationBarBackgroundColor,
        color: color,
        borderBottom: `1px solid ${config.navigationBarBorderColor}`,
        backgroundImage: config.navigationBarBackgroundGradient,
        position: scrollType === 'body' ? 'fixed' : 'absolute'
      }

      if (this.navStyle.backgroundColor) {
        this.navStyle.backgroundImage = 'none'
      }

      if (config.navigationBarBorderColor) {
        this.navStyle.borderBottom = `1px solid ${config.navigationBarBorderColor}`
      } else {
        this.navStyle.borderBottom = '0'
      }
      return config
    },
    // 控制底部标签栏是否显示
    isTabBar () {
      return this.tabBarList && this.tabBarList.length > 0
    },
    // 设置底部标签栏样式
    tabBarStyle () {
      let style = {}
      if (this.navigationBarVisible && this.tabBar.position === 'top') {
        style.top = this.headerHeight + 'px'
      }
      let scrollType = document.body.getAttribute('scroll-type')
      style.position = scrollType === 'body' ? 'fixed' : 'absolute'
      return style
    },

    bottom () {
      return this.isTabBar ? `${this.tabBarHeight}px` : 0
    },
    // 底部标签栏应用app.json和page.json的设置
    pageConfig () {
      if (this.isTabBar) {
        return this.tabBarList[this.tabIndex].pageConfig
      } else {
        return this.$route.meta.pageConfig || window.__$uiPageConfig
      }
    }
  },
  watch: {
    '$route.path' (path) {
      console.log(path)
      this.handleIosGesture()
      this.initTab()
      this.initBodyStyle()
      if(path != '/pages/layout/address' && path != '/pages/layout/shop' && path != '/pages/layout/home' && path != '/pages/layout/c2c'){
        this.footer = false;
      }else{
        this.footer = true;
      }
    },
    active(data){
      console.log(data)
      if(data == 0){
        ui.redirectTo({
          url:'/pages/layout/address'
        })
      }else if(data == 1){
        ui.redirectTo({
          url:'/pages/layout/shop?id='+data
        })
      }else if(data == 2){
        ui.redirectTo({
          url:'/pages/layout/home?id='+data
        })
      }else if(data == 3){

      }else if(data == 4){

      }
    }
  },
    // 初始化
  created () {
    var key = localStorage.getItem('auth_key');
    
    if(key == null){
      ui.redirectTo({
        url:'/pages/login_register/login'
      })
    }else{
      console.log(key)
      ui.redirectTo({
        url:'/pages/layout/home'
      })
    }
    this.initTab()
    this.initPaths()
    this.$nextTick(() => {
      this.handleIosGesture()
    })
  },
  methods: {
    actives(e){
      this.active = e;
    },
    handleNavIconTap () {
      this.showSlideMenu = !this.showSlideMenu
    },
    // 初始化底部标签栏
    initTab () {
      this.tabBar = this.getTabBar()
      this.tabBarList = this.tabBar.list
      if (this.tabBar.paths) {
        this.tabIndex = this.tabBar.paths.indexOf(this.$route.path)
      }
    },
    // 初始化路由
    initPaths () {
      let routes = this.$router.options.routes
      this.paths = routes.map((item) => {
        return item.path
      })
    },
    initBodyStyle () {
      if (this.winConfig && this.winConfig.backgroundColor) {
        document.body.style.backgroundColor = this.winConfig.backgroundColor
      }
    },
    // iOS是否禁用侧滑退出
    handleIosGesture () {
      if (ui.IS_IOS) {
        ui.setPagePopGesture && ui.setPagePopGesture({
          openPagePopGesture: !this.pageConfig.disableIosGesture
        })
      }
    },
    // tabBar示例用到，底部标签栏切换前事件处理
    handleTabBeforeChange ({
      id,
      index,
      next
    }) {
      next()
    },

    // tabBar示例用到，底部标签栏切换后事件处理
    handleTabChange ({
      id,
      index
    }) {

    },
    // 回退处理
    handleBack () {
      ui.navigateBack()
    },
    getTabBar () {
      let tabBars = [this.$router.options.tabBar, ...this.$router.options.pageTabBars]
      for (let i = 0; i < tabBars.length; i++) {
        if (tabBars[i].paths && tabBars[i].paths.indexOf(this.$route.path) > -1) {
          return tabBars[i]
        }
      }
      return {}
    }

  },
}
</script>

<template>
  <ui-view id="ui-app">
    <ui-slide-menu width="280" threshold="30" touch="{{ pageConfig.touchSlideMenu }}" ui:model="showSlideMenu">

    <ui-view slot="menu" class="menu">
      <ui-text block style="color:#fff;margin:10px">侧滑菜单</ui-text>
    </ui-view>

    <ui-view slot="panel">
    <!-- 通用导航栏 -->
      <ui-nav-bar
        ui:if="pageConfig"
        ui:show="navigationBarVisible"
        style="{{ navStyle }}">
        <ui-row>
          <ui-col width="80">
            <span class="back" bindtap="handleBack" ui:show="{{showBack}}">
              <ui-icon type="arrow-left" font-size="24"></ui-icon>返回
            </span>
            <span class="back" ui:show="{{!showBack}}" bindtap="handleNavIconTap">
              <ui-icon type="list" color="#2B333B" size="16"></ui-icon>
            </span>
          </ui-col>
          <ui-col width="{{WIN_WIDTH-160}}" align="center" content-direction="row" class="nav-bar-center">
            <ui-view class="nav-bar-center-loading" style="display: none;"></ui-view>
            <span class="nav-bar-center-text">{{ $t(winConfig.navigationBarTitleText) }}</span>
          </ui-col>
          <ui-col width="80">

          </ui-col>
        </ui-row>
      </ui-nav-bar>

    <!-- 页面路由 -->
    <keep-alive>
      <router-view ui:if="{{ !isApp && pageConfig.cache }}" class="router-view"></router-view>
    </keep-alive>
    <router-view ui:if="{{ isApp || !pageConfig.cache }}" class="router-view"></router-view>

    <!-- 底部标签栏 -->
    <ui-tab-bar
        bindbeforechange="handleTabBeforeChange"
        bindchange="handleTabChange"
        ui:if="isTabBar"
        ui:model="tabIndex"
        style="{{ tabBarStyle }}"
        id="{{ tabBar.id }}"
        group-id="{{ tabBar.groupId }}"
        icon-size="{{ tabBar.iconSize }}"
        font-size="{{ tabBar.fontSize }}"
        position="{{ tabBar.position }}"
        list="{{ tabBarList }}"
        paths="{{ tabBar.paths }}"
        background-color="{{ tabBar.backgroundColor }}"
        border-color="{{ tabBar.borderColor }}"
        color="{{ tabBar.color }}"
        selected-color="{{ tabBar.selectedColor }}">
    </ui-tab-bar>
  </ui-view>
  </ui-slide-menu>
  <ui-view class="tab" ui:if="{{footer}}">
    <ui-view class="span_20" bindtap="actives(0)">
      <ui-view class="{{['icon','tuiguang',{active:active == 0}]}}" data-active="0"></ui-view>
    </ui-view>
    <ui-view class="span_20" bindtap="actives(1)">
      <ui-view class="{{['icon','shop',{active:active == 1}]}}"></ui-view>
    </ui-view>
    <ui-view class="span_20" bindtap="actives(2)">
      <ui-view class="bg"></ui-view>
      <ui-view class="circle">
        <ui-view class="{{['icon','home',{active:active == 2}]}}"></ui-view>
      </ui-view>
    </ui-view>
    <ui-view class="span_20" bindtap="actives(3)">
      <ui-view class="{{['icon','ctc',{active:active == 3}]}}"></ui-view>
    </ui-view>
    <ui-view class="span_20" bindtap="actives(4)">
      <ui-view class="{{['icon','wallet',{active:active == 4}]}}"></ui-view>
    </ui-view>
  </ui-view>
  </ui-view>
</template>


.底部导航栏 {
  background-color: rgb(255, 255, 255);
  box-shadow: 0px 0px 11.52px 0.48px rgba(0, 0, 0, 0.07);
  position: absolute;
  left: 11px;
  top: 11px;
  width: 750px;
  height: 125px;
  z-index: 1;
}


<style lang="less">
 @import './static/css/animate.css';
 @import './static/css/loading.less';
 @import './static/font/iconfont.css';
 .tab{
   width: 750rpx;
   height: 96rpx;
  background-color: rgb(255, 255, 255);
  box-shadow: 0px 0px 11.52rpx 0.48rpx rgba(0, 0, 0, 0.07);
  z-index: 999;
    position: fixed;
    line-height: 125rpx;
    bottom: 0;
    .ui-col{
      text-align: center;
    }
    .span_20{
      float: left;
      height: 100%;
      width: 20%;
      position: relative;
      z-index: 999;
      .circle{
        width: 100%;
        height: 100%;
        border-top: 1px solid rgba(0, 0, 0, 0.07);
        background: #fff;
        border-radius: 50%;
        position: relative;
        top: -35%;
        .icon{
          margin-top: 42rpx;
        }
      }
      // .bg{
      //   width: 100%;
      //   height: 100%;
      //   // background: #fff;
      //   position: relative;
      //   z-index: 0;
      // }
    }
    .icon{
      width: 41rpx;
      height: 41rpx;
      background: #000;
      margin: 27.5rpx auto 0;
    }
    .shop{
      width: 40rpx;
      height: 33rpx;
      margin-top: 31.5rpx;
      background: url('https://www.agamchain.com/static/8dbee363837e9eda68d29dcdab850e75') no-repeat center center / 40rpx 33rpx ;
    }
    .shop.active{
      background: url('https://www.agamchain.com/static/3c80717eee2c5caa8af85df12cb0f26c') no-repeat center center / 40rpx 33rpx ;
    }
    .tuiguang{
      width: 40rpx;
      height: 33rpx;
      margin-top: 31.5rpx;
      background: url('https://www.agamchain.com/static/cbf4dfa17405aba9cf4cd6b23951c81c') no-repeat center center / 40rpx 33rpx ;
    }
    .tuiguang.active{
      background: url('https://www.agamchain.com/static/04fcab3bbef011bfa720a426a543dc13') no-repeat center center / 40rpx 33rpx ;
    }
    .home{
      width: 56rpx;
      height: 51rpx;
      margin-top: 37rpx;
      background: url('https://www.agamchain.com/static/ceeef5f0ceaf1a2d46bc3fc302ded1bb') no-repeat center center / 56rpx 51rpx ;

    }
    .home.active{
      background: url('https://www.agamchain.com/static/31d8e0c40d69b277a83add3ecefe55f3') no-repeat center center / 56rpx 51rpx ;
    }
    .ctc{
      width: 40rpx;
      height: 33rpx;
      background: url('https://www.agamchain.com/static/4007d14e38cf2735fc25598968539f47') no-repeat center center / 40rpx 33rpx ;      margin-top: 31.5rpx;
      
    }
    .ctc.active{
      background: url('https://www.agamchain.com/static/f09d97ee15058ca81b560aba1628da72') no-repeat center center / 40rpx 33rpx ;
    }
    .wallet{
      width: 40rpx;
      height: 33rpx;
      margin-top: 31.5rpx;
      background: url('https://www.agamchain.com/static/28b7bcfc34af96a010b20b18328adcdc') no-repeat center center / 40rpx 33rpx ;
    }
    .wallet.active{
      background: url('https://www.agamchain.com/static/1c578a7d0a391a2660deeb623ce5879d') no-repeat center center / 40rpx 33rpx ;     
    }
 }
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Helvetica Neue', Helvetica, PingFang ,'Hiragino Sans GB', 'Microsoft YaHei', SimSun, sans-serif;
    -webkit-touch-callout: none;
}

html,
body {
    font-size: 12px;
    background: #f3f5f8;
}

#ui-app {
    width: 100%;
    height: 100%;
    background: #f3f5f8;
}

.touchui-hover{
  background-color: #eee !important;
}
.iphonex-bottom{
  height: env(safe-area-inset-bottom);
  background-color: #fff;
  width:100%;
}
.ui-nav-bar {
  top: 0;
  left: 0;
  width: 100%;
  .nav-bar-left, .nav-bar-right {
    position: relative;
    width: 66px;
    text-align: center;
  }
  .back {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    i {
      margin-left: 10px;
    }
  }
  .nav-bar-center-text{
    .mix-text-overflow();
  }
}

.ui-tab-bar {
  &.div-scroll {
    position: absolute;
  }
  &.body-scroll {
    position: fixed;
  }
}

.router-view {
  width: 100%;
}
</style>
